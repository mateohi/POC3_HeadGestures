package com.ic.banking.glass.poc3_headgestures;

import com.google.android.glass.app.Card;
import com.google.android.glass.media.Sounds;
import com.google.android.glass.widget.CardScrollAdapter;
import com.google.android.glass.widget.CardScrollView;

import android.app.Activity;
import android.content.Context;
import android.media.AudioManager;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Toast;

/**
 * An {@link Activity} showing a tuggable "Hello World!" card.
 * <p>
 * The main content view is composed of a one-card {@link CardScrollView} that provides tugging
 * feedback to the user when swipe gestures are detected.
 * If your Glassware intends to intercept swipe gestures, you should set the content view directly
 * and use a {@link com.google.android.glass.touchpad.GestureDetector}.
 * @see <a href="https://developers.google.com/glass/develop/gdk/touch">GDK Developer Guide</a>
 */
public class HeadDetectionActivity extends Activity {

    /** {@link CardScrollView} to use as the main content view. */
    private CardScrollView cardScrollView;

    /** "Hello World!" {@link View} generated by {@link #buildView()}. */
    private View view;

    private HeadGestureDetector headGestureDetector;

    @Override
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);

        view = buildView();

        cardScrollView = new CardScrollView(this);
        cardScrollView.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return 1;
            }

            @Override
            public Object getItem(int position) {
                return view;
            }

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return view;
            }

            @Override
            public int getPosition(Object item) {
                if (view.equals(item)) {
                    return 0;
                }
                return AdapterView.INVALID_POSITION;
            }
        });
        // Handle the TAP event.
        cardScrollView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // Plays disallowed sound to indicate that TAP actions are not supported.
                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.DISALLOWED);
            }
        });
        createHeadGestureDetector();
        setContentView(cardScrollView);
    }

    private void createHeadGestureDetector() {
        this.headGestureDetector = new HeadGestureDetector(getApplicationContext(), new HeadGestureListener() {
            @Override
            public void onNod() {
                Toast.makeText(getApplicationContext(), "Nod", Toast.LENGTH_SHORT);
            }

            @Override
            public void onHeadShake() {
                Toast.makeText(getApplicationContext(), "Head shake", Toast.LENGTH_SHORT);
            }

            @Override
            public void onWink() {
                Toast.makeText(getApplicationContext(), "Wink", Toast.LENGTH_SHORT);
            }
        });
    }

    @Override
    protected void onResume() {
        super.onResume();
        cardScrollView.activate();
    }

    @Override
    protected void onPause() {
        cardScrollView.deactivate();

        super.onPause();
    }

    /**
     * Builds a Glass styled "Hello World!" view using the {@link Card} class.
     */
    private View buildView() {
        Card card = new Card(this);

        card.setText(R.string.hello_world);
        return card.getView();
    }

}
